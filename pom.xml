<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.pny</groupId>
	<artifactId>pny-cloud</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>pny-cloud</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.4.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<modules>
		<module>pny-config</module>
		<module>pny-eureka</module>
		<module>pny-common</module>
		<module>pny-server</module>
		<module>pny-client</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<pny.version>0.0.1-SNAPSHOT</pny.version>
		<!-- Guava是一种基于开源的Java库，其中包含谷歌正在由他们很多项目使用的很多核心库。这个库是为了方便编码，并减少编码错误。这个库提供用于集合，缓存，支持原语，并发性，常见注解，字符串处理，I/O和验证的实用方法。 -->
		<!-- https://www.yiibai.com/guava/ -->
		<guava.version>25.1-jre</guava.version>
		<fastjson.version>1.2.46</fastjson.version>
		<!-- mybatis 增强工具包，简化 CRUD 操作 -->
		<!-- https://gitee.com/baomidou/mybatis-plus -->
		<!-- 考虑升级到<mybatis-plus.version>3.0-alpha</mybatis-plus.version>，全面支持lambda表达式 -->
		<mybatis-plus.version>2.3</mybatis-plus.version>
		<!-- Druid是Java语言中最好的数据库连接池。Druid能够提供强大的监控和扩展功能。 -->
		<!-- https://github.com/alibaba/druid -->
		<druid.version>1.1.12</druid.version>
		<!-- spring集成mybatis -->
		<mybatis-spring-boot-starter.version>1.3.2</mybatis-spring-boot-starter.version>
		<spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
		<!-- api -->
		<swagger.version>2.8.0</swagger.version>
		<!-- 节点监控 springbootadmin -->
		<monitor.version>2.0.1</monitor.version>
		<!-- 权限认证oauth2 -->
		<security.oauth.version>2.3.3.RELEASE</security.oauth.version>
		<!-- java工具包 http://hutool.mydoc.io/ -->
		<hutool.version>4.1.12</hutool.version>
		<!-- 验证码组件 -->
		<kaptcha.version>0.0.9</kaptcha.version>
		<!-- geohash算法工具包 -->
		<geohash.version>0.7.1</geohash.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!--公共依赖 -->
	<dependencies>
		<!-- <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-stream-rabbit</artifactId> 
			</dependency> -->
		<!--eureka 客户端 -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<!--配置文件处理器 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!--监控 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!--监控客户端 -->
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-client</artifactId>
			<version>${monitor.version}</version>
		</dependency>
		<!--断路器依赖 -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
		</dependency>
		<!-- Lombok 是一种 Java™ 实用工具，可用来帮助开发人员消除 Java 的冗长，尤其是对于简单的 Java 对象（POJO）。它通过注解实现这一目的。 -->
		<!-- https://www.projectlombok.org/ -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<!--谷歌常用工具类 -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		<!--hutool -->
		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
			<version>${hutool.version}</version>
		</dependency>
		<!--测试依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!--编译的时候用到 @inject注解 -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
		</resources>
	</build>

	<developers>
		<developer>
			<id>pmyun</id>
			<name>pmyun</name>
			<email>407161824@qq.com</email>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
	</developers>
</project>